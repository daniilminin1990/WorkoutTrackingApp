"use strict";

const form = document.querySelector(".form");
const containerWorkouts = document.querySelector(".workouts");
const inputType = document.querySelector(".form__input--type");
const inputDistance = document.querySelector(".form__input--distance");
const inputDuration = document.querySelector(".form__input--duration");
const inputCadence = document.querySelector(".form__input--cadence");
const inputElevation = document.querySelector(".form__input--elevation");

/* 
todo 12-2 –ò—Å–ø–æ–ª—å–∑—É–µ–º Geolocation API
–£–∂–µ —Å–æ–∑–¥–∞–Ω—ã HTML, CSS, –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –Ω—É–∂–Ω—ã–µ DOM —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ HTML
Geolocation API –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ web-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—Å–∏—Ç—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –µ–≥–æ. –ò–∑ —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏.
–î–ª—è –≤—ã–∑–æ–≤–∞ API –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å
Navigator.geolocation
API –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω–æ —á–µ—Ä–µ–∑ Navigator.geolocation; —ç—Ç–æ –∑–∞—Å—Ç–∞–≤–∏—Ç –±—Ä–∞—É–∑–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–≤–µ—Å—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–µ–∫—É—â–µ–º—É –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é. –ï—Å–ª–∏ –µ–≥–æ –æ–¥–æ–±—Ä—è—Ç, —Ç–æ –±—Ä–∞—É–∑–µ—Ä —Å–º–æ–∂–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º –ø–æ —Ä–∞–±–æ—Ç–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–µ—Å—Ç–æ–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, GPS).

–¢–æ–≥–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É —Å—Ç–∞–Ω—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:

Geolocation.getCurrentPosition(): –≤–æ–∑–≤—Ä–∞—Ç–∏—Ç –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
Geolocation.watchPosition() (en-US): –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞—è –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ.

–∏–Ω—Ñ–∞ —Å —Å–∞–π—Ç–∞ https://developer.mozilla.org/ru/docs/Web/API/Geolocation_API

–ú—ã –∂–µ –Ω–∞–ø–∏—à–µ–º –ø—Ä—è–º —Å—Ä–∞–∑—É navigator.geolocation.getCurrentPosition();
*/

// console.log((Date.now() + "").slice(-10));

class Workout {
  date = new Date();
  id = (Date.now() + "").slice(-10);
  constructor(coords, distance, duration) {
    this.coords = coords;
    this.distance = distance;
    this.duration = duration;
  }

  _setDescription() {
    // prettier-ignore
    const months = [
      "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December",];
    this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} ${
      months[this.date.getMonth()]
    } ${this.date.getDate()}`;
  }
}

class Running extends Workout {
  type = "running";
  constructor(coords, distance, duration, cadence) {
    super(coords, distance, duration);
    this.cadence = cadence;
    this.calcPace();
    this._setDescription();
  }
  // –ú–µ—Ç–æ–¥ —Ä–∞—Å—á–µ—Ç–∞ —Ç–µ–º–ø–∞
  calcPace() {
    this.pace = this.duration / this.distance;
    return this.pace;
  }
}

class Cycling extends Workout {
  type = "cycling";
  constructor(coords, distance, duration, elevation) {
    super(coords, distance, duration);
    this.elevation = elevation;
    this.calcSpeed();
    this._setDescription();
  }
  // –ú–µ—Ç–æ–¥ —Ä–∞—Å—á–µ—Ç–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏
  calcSpeed() {
    this.speed = this.distance / (this.duration / 60);
    return this.speed;
  }
}

class App {
  _workouts = [];
  _map;
  _mapEvent;
  constructor() {
    // –ó–ê–ø—É—Å–∫ –ª–æ–≥–∏–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    this._getPosition();

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥ _newWorkout
    form.addEventListener("submit", this._newWorkOut.bind(this));

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥ _toggleField
    inputType.addEventListener("change", this._toggleField.bind(this));
    containerWorkouts.addEventListener("click", this._moveToPopup.bind(this));
  }
  // –ú–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è _loadMap
  _getPosition() {
    if (navigator.geolocation)
      navigator.geolocation.getCurrentPosition(
        this._loadMap.bind(this),

        // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –≤ —Å–ª—É—á–∞–µ –æ—Ç–∫–∞–∑–∞
        function () {
          alert("–í—ã –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–µ–π –ª–æ–∫–∞—Ü–∏–∏");
        }
      );
  }

  // –ú–µ—Ç–æ–¥ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É, –≤ —Å–ª—É—á–∞–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —Å–≤–æ–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
  _loadMap(position) {
    const {
      coords: { latitude },
    } = position;
    const { longitude } = position.coords;
    const coords = [latitude, longitude];

    this._map = L.map("map").setView(coords, 13);

    L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
      attribution:
        '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
    }).addTo(this._map);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –Ω–∞–∂–∞—Ç–∏—è –ø–æ –∫–∞—Ä—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—É—Å—Ç–∏—Ç –º–µ—Ç–æ–¥ _showForm
    this._map.on("click", this._showForm.bind(this));
  }
  // –ú–µ—Ç–æ–¥ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç —Ñ–æ—Ä–º—É –ø—Ä–∏ –∫–ª–∏–∫–µ –ø–æ –∫–∞—Ä—Ç–µ
  _showForm(mapE) {
    this._mapEvent = mapE;
    form.classList.remove("hidden");
    inputDistance.focus();
  }
  // –ú–µ—Ç–æ–¥ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–∏–ø–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
  _toggleField() {
    inputCadence.closest(".form__row").classList.toggle("form__row--hidden");
    inputElevation.closest(".form__row").classList.toggle("form__row--hidden");
  }
  _newWorkOut(e) {
    e.preventDefault();

    const validInputs = (...inputs) =>
      inputs.every((inp) => Number.isFinite(inp));
    const allPositive = (...inputs) => inputs.every((inp) => inp > 0);

    // –î–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º
    const { lat, lng } = this._mapEvent.latlng; // –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    const type = inputType.value; // running –∏–ª–∏ cycling
    const distance = +inputDistance.value; // distance
    const duration = +inputDuration.value;
    let workout;
    if (type === "running") {
      const cadence = +inputCadence.value;

      // –ü—Ä–æ–≤–µ—Ä–∫–∞
      if (
        // —é !Number.isFinite(distance) ||
        // —é !Number.isFinite(duration) ||
        // —é !Number.isFinite(cadence)
        !validInputs(distance, duration, cadence) ||
        !allPositive(distance, duration, cadence)
      ) {
        return alert("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ");
      }
      workout = new Running([lat, lng], distance, duration, cadence);
    }

    if (type === "cycling") {
      const elevation = +inputCadence.value;

      // –ü—Ä–æ–≤–µ—Ä–∫–∞
      if (
        !validInputs(distance, duration, elevation) ||
        !allPositive(distance, duration)
      ) {
        return alert("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ");
      }
      workout = new Cycling([lat, lng], distance, duration, elevation);
    }

    this._workouts.push(workout);
    console.log(this._workouts);

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã, —Ç.–µ. —É—Å—Ç—Ä–æ–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é (—Å—Ç—Ä–æ–∫–∞ –≤–º–µ—Å—Ç–æ —á–∏—Å–ª–∞, –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ)

    // –ï—Å–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ–±–µ–∂–∫—É, —Ç–æ –¥–æ–ª–∂–Ω—ã —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç –ø—Ä–æ–±–µ–∂–∫–∏

    // –ï—Å–ª–∏ –≤–µ–ª–∏–∫, —Ç–æ —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç –≤–µ–ª–æ—Å–∏–ø–µ–¥

    // –î–æ–±–∞–≤–ª—è—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –Ω–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –º–∞—Å—Å–∏–≤ workout

    // 6 –†–µ–Ω–¥–µ—Ä –º–∞—Ä–∫–µ—Ä–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–µ // –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –º–∞—Ä–∫–µ—Ä
    this._renderWorkMarker(workout);

    // –†–µ–Ω–¥–µ—Ä —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    this._renderWorkout(workout);

    // –û—á–∏—Å—Ç–∏—Ç—å –ø–æ–ª—è –≤–≤–æ–¥–∞ –∏ —Å–ø—Ä—è—Ç–∞—Ç—å —Ñ–æ—Ä–º—É
    this._hideForm();
  }
  _renderWorkMarker(workout) {
    L.marker(workout.coords)
      .addTo(this._map)
      .bindPopup(
        L.popup({
          maxWidth: 250,
          minWidth: 100,
          autoClose: false,
          closeOnClick: false,
          className: "mark-popup",
        })
      )
      .setPopupContent(
        `${workout.type === "running" ? "üèÉ‚Äç‚ôÇÔ∏è" : "üö¥‚Äç‚ôÄÔ∏è"} ${workout.description}`
      )
      .openPopup();
  }
  // 7 –û—á–∏—Å—Ç–∏—Ç—å –ø–æ–ª—è –≤–≤–æ–¥–∞ –∏ —Å–ø—Ä—è—Ç–∞—Ç—å —Ñ–æ—Ä–º—É
  _hideForm() {
    inputDistance.value =
      inputDuration.value =
      inputElevation.value =
      inputCadence.value =
        "";
    form.classList.add("hidden");
  }
  // 8 –†–µ–Ω–¥–µ—Ä —Å–ø–∏—Å–∫–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
  _renderWorkout(workout) {
    let html = `
    <li class="workout workout--${workout.type}" data-id="${workout.id}">
    <h2 class="workout__title">${workout.description}</h2>
    <div class="workout__details">
      <span class="workout__icon">${
        workout.type === "running" ? "üèÉ‚Äç‚ôÇÔ∏è" : "üö¥‚Äç‚ôÄÔ∏è"
      }</span>
      <span class="workout__value">${workout.distance}</span>
      <span class="workout__unit">–∫–º</span>
    </div>
    <div class="workout__details">
      <span class="workout__icon">‚è±</span>
      <span class="workout__value">${workout.duration}</span>
      <span class="workout__unit">–º–∏–Ω</span>
    </div>`;
    if (workout.type === "running") {
      html += `
          <div class="workout__details">
            <span class="workout__icon">‚ö°Ô∏è</span>
            <span class="workout__value">${workout.pace.toFixed(1)}</span>
            <span class="workout__unit">–º–∏–Ω/–∫–º</span>
          </div>
          <div class="workout__details">
            <span class="workout__icon">ü¶∂üèº</span>
            <span class="workout__value">${workout.cadence}</span>
            <span class="workout__unit">—à–∞–≥</span>
          </div>
        </li>
        
      `;
    }
    if (workout.type === "cycling") {
      html += `
        <div class="workout__details">
          <span class="workout__icon">‚ö°Ô∏è</span>
          <span class="workout__value">${workout.speed.toFixed(1)}</span>
          <span class="workout__unit">–∫–º/—á–∞—Å</span>
        </div>
        <div class="workout__details">
          <span class="workout__icon">‚õ∞</span>
          <span class="workout__value">${workout.elevation}</span>
          <span class="workout__unit">–º</span>
        </div>
      </li> 
      `;
    }
    form.insertAdjacentHTML("afterend", html);
  }
  _moveToPopup(e) {
    const workoutEL = e.target.closest(".workout");
    console.log(workoutEL);
    if (!workoutEL) return;

    const workout = this._workouts.find(
      (work) => work.id === workoutEL.dataset.id
    );
    console.log(workout);
    this._map.setView(workout.coords, 13, {
      animate: true,
      pan: { duration: 1 },
    });
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = new App();
app._getPosition;

/* 
todo 12-10 –ü–ª–∞–≤–Ω–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º –Ω–∞ –∫–∞—Ä—Ç–µ

–†–µ–∞–ª–∏–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –ø–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º.
–ö–æ–≥–¥–∞ –Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –æ–¥–Ω—É –∏–∑ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, –∫–∞—Ä—Ç–∞ –ø–ª–∞–≤–Ω–æ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –∫ –º–∞—Ä–∫–µ—Ä—É –∏ —Ç–∞–∫–∂–µ, –µ—Å–ª–∏ —Å–∏–ª—å–Ω–æ –∑–∞–∑—É–º–∏–ª–∏, —Ç–æ–∂–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
–¢.–µ. –¥–æ–±–∞–≤–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ containerWorkouts, —Ç—É–¥–∞ –∂–µ, –≥–¥–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è toggleFIeld —Å –º–µ—Ç–æ–¥–æ–º _moveToPopup, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–¥–∏–º –≤ render
–¢–∞–º –ø–æ id –±—É–¥–µ–º –Ω–∞—Ö–æ–¥–∏—Ç—å –Ω—É–∂–Ω—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –ø–æ –µ–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º, (–∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π workout) –ù–û –ë–£–î–ï–ú –ü–û–õ–¨–ó–û–í–ê–¢–¨–°–Ø –ú–ï–¢–û–î–û–ú API
–¢–∞–∫–∂–µ —É–±–µ—Ä–µ–º —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ closest —Å –ø–æ–º–æ—â—å—é if
–ú–µ—Ç–æ–¥ API - setView –ø–µ—Ä–µ–¥–≤–∏–≥–∞–µ—Ç –∫ –Ω—É–∂–Ω–æ–º—É –º–µ—Å—Ç—É (–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ API)

*/
